{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "docHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "text",
          "type": "string"
        }
      ],
      "name": "DocumentRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "docHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "geo",
          "type": "string"
        }
      ],
      "name": "DocumentSigned",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "docHash",
          "type": "bytes32"
        }
      ],
      "name": "getDocument",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "docHash",
          "type": "bytes32"
        }
      ],
      "name": "getSignatures",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "geo",
              "type": "string"
            }
          ],
          "internalType": "struct SignatureRegistry.Signature[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "text",
          "type": "string"
        }
      ],
      "name": "registerDocument",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "docHash",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "geo",
          "type": "string"
        }
      ],
      "name": "signDocument",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5afe1654f0a726fe104496086a25e5d52ad648f833531f6ef1007f8400bc8f6f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1088425",
    "logsBloom": "0x
    "blockHash": "0x1dcf5178152b100eb67ac82252fd4e3cd165a399f153dd3309446fb61b9ebbc6",
    "transactionHash": "0x5afe1654f0a726fe104496086a25e5d52ad648f833531f6ef1007f8400bc8f6f",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1088425",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "9a3b8ceabef63b1a82ead26539895554",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"}],\"name\":\"DocumentRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"geo\",\"type\":\"string\"}],\"name\":\"DocumentSigned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"getDocument\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"}],\"name\":\"getSignatures\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"geo\",\"type\":\"string\"}],\"internalType\":\"struct SignatureRegistry.Signature[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"text\",\"type\":\"string\"}],\"name\":\"registerDocument\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"docHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"geo\",\"type\":\"string\"}],\"name\":\"signDocument\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"registerDocument(string)\":{\"params\":{\"text\":\"Texto completo o resumen del documento\"}},\"signDocument(bytes32,string)\":{\"params\":{\"docHash\":\"Hash del documento (devuelto al registrarlo)\",\"geo\":\"Geolocalizacion proporcionada por el front (ej: \\\"lat,long\\\")\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getDocument(bytes32)\":{\"notice\":\"Obtener el texto y creador de un documento\"},\"getSignatures(bytes32)\":{\"notice\":\"Obtener todas las firmas de un documento\"},\"registerDocument(string)\":{\"notice\":\"Registrar un nuevo documento\"},\"signDocument(bytes32,string)\":{\"notice\":\"Firmar un documento ya registrado\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SignatureRegistry.sol\":\"SignatureRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SignatureRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\ncontract SignatureRegistry {\\r\\n    struct Signature {\\r\\n        address signer;      // Direcci\\u00f3n de quien firm\\u00f3\\r\\n        uint256 timestamp;   // Momento de la firma (block.timestamp)\\r\\n        string geo;          // Geolocalizaci\\u00f3n (ej: \\\"lat,long\\\" o \\\"Posadas, AR\\\")\\r\\n    }\\r\\n\\r\\n    struct Document {\\r\\n        string text;              // Texto o hash del contrato/documento\\r\\n        address creator;          // Qui\\u00e9n lo registr\\u00f3\\r\\n        Signature[] signatures;   // Firmas asociadas\\r\\n        mapping(address => bool) signed; // Lookup para evitar doble firma\\r\\n    }\\r\\n\\r\\n    mapping(bytes32 => Document) private documents;\\r\\n\\r\\n    event DocumentRegistered(bytes32 indexed docHash, address indexed creator, string text);\\r\\n    event DocumentSigned(bytes32 indexed docHash, address indexed signer, uint256 timestamp, string geo);\\r\\n\\r\\n    /// @notice Registrar un nuevo documento\\r\\n    /// @param text Texto completo o resumen del documento\\r\\n    function registerDocument(string memory text) public returns (bytes32) {\\r\\n        bytes32 docHash = keccak256(abi.encodePacked(text));\\r\\n        Document storage doc = documents[docHash];\\r\\n        require(doc.creator == address(0), \\\"Document already registered\\\");\\r\\n\\r\\n        doc.text = text;\\r\\n        doc.creator = msg.sender;\\r\\n\\r\\n        emit DocumentRegistered(docHash, msg.sender, text);\\r\\n        return docHash;\\r\\n    }\\r\\n\\r\\n    /// @notice Firmar un documento ya registrado\\r\\n    /// @param docHash Hash del documento (devuelto al registrarlo)\\r\\n    /// @param geo Geolocalizacion proporcionada por el front (ej: \\\"lat,long\\\")\\r\\n    function signDocument(bytes32 docHash, string memory geo) public {\\r\\n        Document storage doc = documents[docHash];\\r\\n        require(doc.creator != address(0), \\\"Document not found\\\");\\r\\n        require(!doc.signed[msg.sender], \\\"Already signed\\\");\\r\\n\\r\\n        doc.signatures.push(Signature({\\r\\n            signer: msg.sender,\\r\\n            timestamp: block.timestamp,\\r\\n            geo: geo\\r\\n        }));\\r\\n\\r\\n        doc.signed[msg.sender] = true;\\r\\n\\r\\n        emit DocumentSigned(docHash, msg.sender, block.timestamp, geo);\\r\\n    }\\r\\n\\r\\n    /// @notice Obtener el texto y creador de un documento\\r\\n    function getDocument(bytes32 docHash) public view returns (string memory, address) {\\r\\n        Document storage doc = documents[docHash];\\r\\n        require(doc.creator != address(0), \\\"Document not found\\\");\\r\\n        return (doc.text, doc.creator);\\r\\n    }\\r\\n\\r\\n    /// @notice Obtener todas las firmas de un documento\\r\\n    function getSignatures(bytes32 docHash) public view returns (Signature[] memory) {\\r\\n        Document storage doc = documents[docHash];\\r\\n        require(doc.creator != address(0), \\\"Document not found\\\");\\r\\n        return doc.signatures;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3d3abbff43e4de7af6edcdee6cf25791699b87d592563f38d6b023fc1da29722\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506112c8806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634847a470146100515780639bc5106814610081578063b10d6b41146100b1578063f92ae3b4146100e2575b600080fd5b61006b600480360381019061006691906109f4565b6100fe565b6040516100789190610a56565b60405180910390f35b61009b60048036038101906100969190610a9d565b610281565b6040516100a89190610cb5565b60405180910390f35b6100cb60048036038101906100c69190610a9d565b610480565b6040516100d9929190610d30565b60405180910390f35b6100fc60048036038101906100f79190610d60565b6105eb565b005b600080826040516020016101129190610df8565b60405160208183030381529060405280519060200120905060008060008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ca90610e5b565b60405180910390fd5b838160000190816101e49190611087565b50338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16827fdba629cc54aad70846b805286cd90bf0920d3b29656d9b042814d2a2dedf4acb8660405161026f9190611159565b60405180910390a38192505050919050565b606060008060008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361032c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610323906111c7565b60405180910390fd5b80600201805480602002602001604051908101604052809291908181526020016000905b8282101561047457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180546103e390610eaa565b80601f016020809104026020016040519081016040528092919081815260200182805461040f90610eaa565b801561045c5780601f106104315761010080835404028352916020019161045c565b820191906000526020600020905b81548152906001019060200180831161043f57829003601f168201915b50505050508152505081526020019060010190610350565b50505050915050919050565b60606000806000808581526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361052c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610523906111c7565b60405180910390fd5b806000018160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681805461056190610eaa565b80601f016020809104026020016040519081016040528092919081815260200182805461058d90610eaa565b80156105da5780601f106105af576101008083540402835291602001916105da565b820191906000526020600020905b8154815290600101906020018083116105bd57829003601f168201915b505050505091509250925050915091565b60008060008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068b906111c7565b60405180910390fd5b8060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071a90611233565b60405180910390fd5b8060020160405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190816107e79190611087565b50505060018160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16837f4d2ecf6e6b11ef505bdd2b7faee33fb51925593d79448cb949368b7281ce3848428560405161088d929190611262565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610901826108b8565b810181811067ffffffffffffffff821117156109205761091f6108c9565b5b80604052505050565b600061093361089a565b905061093f82826108f8565b919050565b600067ffffffffffffffff82111561095f5761095e6108c9565b5b610968826108b8565b9050602081019050919050565b82818337600083830152505050565b600061099761099284610944565b610929565b9050828152602081018484840111156109b3576109b26108b3565b5b6109be848285610975565b509392505050565b600082601f8301126109db576109da6108ae565b5b81356109eb848260208601610984565b91505092915050565b600060208284031215610a0a57610a096108a4565b5b600082013567ffffffffffffffff811115610a2857610a276108a9565b5b610a34848285016109c6565b91505092915050565b6000819050919050565b610a5081610a3d565b82525050565b6000602082019050610a6b6000830184610a47565b92915050565b610a7a81610a3d565b8114610a8557600080fd5b50565b600081359050610a9781610a71565b92915050565b600060208284031215610ab357610ab26108a4565b5b6000610ac184828501610a88565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2182610af6565b9050919050565b610b3181610b16565b82525050565b6000819050919050565b610b4a81610b37565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b8a578082015181840152602081019050610b6f565b60008484015250505050565b6000610ba182610b50565b610bab8185610b5b565b9350610bbb818560208601610b6c565b610bc4816108b8565b840191505092915050565b6000606083016000830151610be76000860182610b28565b506020830151610bfa6020860182610b41565b5060408301518482036040860152610c128282610b96565b9150508091505092915050565b6000610c2b8383610bcf565b905092915050565b6000602082019050919050565b6000610c4b82610aca565b610c558185610ad5565b935083602082028501610c6785610ae6565b8060005b85811015610ca35784840389528151610c848582610c1f565b9450610c8f83610c33565b925060208a01995050600181019050610c6b565b50829750879550505050505092915050565b60006020820190508181036000830152610ccf8184610c40565b905092915050565b600082825260208201905092915050565b6000610cf382610b50565b610cfd8185610cd7565b9350610d0d818560208601610b6c565b610d16816108b8565b840191505092915050565b610d2a81610b16565b82525050565b60006040820190508181036000830152610d4a8185610ce8565b9050610d596020830184610d21565b9392505050565b60008060408385031215610d7757610d766108a4565b5b6000610d8585828601610a88565b925050602083013567ffffffffffffffff811115610da657610da56108a9565b5b610db2858286016109c6565b9150509250929050565b600081905092915050565b6000610dd282610b50565b610ddc8185610dbc565b9350610dec818560208601610b6c565b80840191505092915050565b6000610e048284610dc7565b915081905092915050565b7f446f63756d656e7420616c726561647920726567697374657265640000000000600082015250565b6000610e45601b83610cd7565b9150610e5082610e0f565b602082019050919050565b60006020820190508181036000830152610e7481610e38565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ec257607f821691505b602082108103610ed557610ed4610e7b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610f3d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610f00565b610f478683610f00565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610f84610f7f610f7a84610b37565b610f5f565b610b37565b9050919050565b6000819050919050565b610f9e83610f69565b610fb2610faa82610f8b565b848454610f0d565b825550505050565b600090565b610fc7610fba565b610fd2818484610f95565b505050565b5b81811015610ff657610feb600082610fbf565b600181019050610fd8565b5050565b601f82111561103b5761100c81610edb565b61101584610ef0565b81016020851015611024578190505b61103861103085610ef0565b830182610fd7565b50505b505050565b600082821c905092915050565b600061105e60001984600802611040565b1980831691505092915050565b6000611077838361104d565b9150826002028217905092915050565b61109082610b50565b67ffffffffffffffff8111156110a9576110a86108c9565b5b6110b38254610eaa565b6110be828285610ffa565b600060209050601f8311600181146110f157600084156110df578287015190505b6110e9858261106b565b865550611151565b601f1984166110ff86610edb565b60005b8281101561112757848901518255600182019150602085019450602081019050611102565b868310156111445784890151611140601f89168261104d565b8355505b6001600288020188555050505b505050505050565b600060208201905081810360008301526111738184610ce8565b905092915050565b7f446f63756d656e74206e6f7420666f756e640000000000000000000000000000600082015250565b60006111b1601283610cd7565b91506111bc8261117b565b602082019050919050565b600060208201905081810360008301526111e0816111a4565b9050919050565b7f416c7265616479207369676e6564000000000000000000000000000000000000600082015250565b600061121d600e83610cd7565b9150611228826111e7565b602082019050919050565b6000602082019050818103600083015261124c81611210565b9050919050565b61125c81610b37565b82525050565b60006040820190506112776000830185611253565b81810360208301526112898184610ce8565b9050939250505056fea2646970667358221220a1f355a9766a868ec2134712ccde9465a8136493b5ad0b43a4d51531715f720864736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80634847a470146100515780639bc5106814610081578063b10d6b41146100b1578063f92ae3b4146100e2575b600080fd5b61006b600480360381019061006691906109f4565b6100fe565b6040516100789190610a56565b60405180910390f35b61009b60048036038101906100969190610a9d565b610281565b6040516100a89190610cb5565b60405180910390f35b6100cb60048036038101906100c69190610a9d565b610480565b6040516100d9929190610d30565b60405180910390f35b6100fc60048036038101906100f79190610d60565b6105eb565b005b600080826040516020016101129190610df8565b60405160208183030381529060405280519060200120905060008060008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ca90610e5b565b60405180910390fd5b838160000190816101e49190611087565b50338160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16827fdba629cc54aad70846b805286cd90bf0920d3b29656d9b042814d2a2dedf4acb8660405161026f9190611159565b60405180910390a38192505050919050565b606060008060008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361032c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610323906111c7565b60405180910390fd5b80600201805480602002602001604051908101604052809291908181526020016000905b8282101561047457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180546103e390610eaa565b80601f016020809104026020016040519081016040528092919081815260200182805461040f90610eaa565b801561045c5780601f106104315761010080835404028352916020019161045c565b820191906000526020600020905b81548152906001019060200180831161043f57829003601f168201915b50505050508152505081526020019060010190610350565b50505050915050919050565b60606000806000808581526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361052c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610523906111c7565b60405180910390fd5b806000018160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681805461056190610eaa565b80601f016020809104026020016040519081016040528092919081815260200182805461058d90610eaa565b80156105da5780601f106105af576101008083540402835291602001916105da565b820191906000526020600020905b8154815290600101906020018083116105bd57829003601f168201915b505050505091509250925050915091565b60008060008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068b906111c7565b60405180910390fd5b8060030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071a90611233565b60405180910390fd5b8060020160405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190816107e79190611087565b50505060018160030160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16837f4d2ecf6e6b11ef505bdd2b7faee33fb51925593d79448cb949368b7281ce3848428560405161088d929190611262565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610901826108b8565b810181811067ffffffffffffffff821117156109205761091f6108c9565b5b80604052505050565b600061093361089a565b905061093f82826108f8565b919050565b600067ffffffffffffffff82111561095f5761095e6108c9565b5b610968826108b8565b9050602081019050919050565b82818337600083830152505050565b600061099761099284610944565b610929565b9050828152602081018484840111156109b3576109b26108b3565b5b6109be848285610975565b509392505050565b600082601f8301126109db576109da6108ae565b5b81356109eb848260208601610984565b91505092915050565b600060208284031215610a0a57610a096108a4565b5b600082013567ffffffffffffffff811115610a2857610a276108a9565b5b610a34848285016109c6565b91505092915050565b6000819050919050565b610a5081610a3d565b82525050565b6000602082019050610a6b6000830184610a47565b92915050565b610a7a81610a3d565b8114610a8557600080fd5b50565b600081359050610a9781610a71565b92915050565b600060208284031215610ab357610ab26108a4565b5b6000610ac184828501610a88565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b2182610af6565b9050919050565b610b3181610b16565b82525050565b6000819050919050565b610b4a81610b37565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b8a578082015181840152602081019050610b6f565b60008484015250505050565b6000610ba182610b50565b610bab8185610b5b565b9350610bbb818560208601610b6c565b610bc4816108b8565b840191505092915050565b6000606083016000830151610be76000860182610b28565b506020830151610bfa6020860182610b41565b5060408301518482036040860152610c128282610b96565b9150508091505092915050565b6000610c2b8383610bcf565b905092915050565b6000602082019050919050565b6000610c4b82610aca565b610c558185610ad5565b935083602082028501610c6785610ae6565b8060005b85811015610ca35784840389528151610c848582610c1f565b9450610c8f83610c33565b925060208a01995050600181019050610c6b565b50829750879550505050505092915050565b60006020820190508181036000830152610ccf8184610c40565b905092915050565b600082825260208201905092915050565b6000610cf382610b50565b610cfd8185610cd7565b9350610d0d818560208601610b6c565b610d16816108b8565b840191505092915050565b610d2a81610b16565b82525050565b60006040820190508181036000830152610d4a8185610ce8565b9050610d596020830184610d21565b9392505050565b60008060408385031215610d7757610d766108a4565b5b6000610d8585828601610a88565b925050602083013567ffffffffffffffff811115610da657610da56108a9565b5b610db2858286016109c6565b9150509250929050565b600081905092915050565b6000610dd282610b50565b610ddc8185610dbc565b9350610dec818560208601610b6c565b80840191505092915050565b6000610e048284610dc7565b915081905092915050565b7f446f63756d656e7420616c726561647920726567697374657265640000000000600082015250565b6000610e45601b83610cd7565b9150610e5082610e0f565b602082019050919050565b60006020820190508181036000830152610e7481610e38565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ec257607f821691505b602082108103610ed557610ed4610e7b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610f3d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610f00565b610f478683610f00565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610f84610f7f610f7a84610b37565b610f5f565b610b37565b9050919050565b6000819050919050565b610f9e83610f69565b610fb2610faa82610f8b565b848454610f0d565b825550505050565b600090565b610fc7610fba565b610fd2818484610f95565b505050565b5b81811015610ff657610feb600082610fbf565b600181019050610fd8565b5050565b601f82111561103b5761100c81610edb565b61101584610ef0565b81016020851015611024578190505b61103861103085610ef0565b830182610fd7565b50505b505050565b600082821c905092915050565b600061105e60001984600802611040565b1980831691505092915050565b6000611077838361104d565b9150826002028217905092915050565b61109082610b50565b67ffffffffffffffff8111156110a9576110a86108c9565b5b6110b38254610eaa565b6110be828285610ffa565b600060209050601f8311600181146110f157600084156110df578287015190505b6110e9858261106b565b865550611151565b601f1984166110ff86610edb565b60005b8281101561112757848901518255600182019150602085019450602081019050611102565b868310156111445784890151611140601f89168261104d565b8355505b6001600288020188555050505b505050505050565b600060208201905081810360008301526111738184610ce8565b905092915050565b7f446f63756d656e74206e6f7420666f756e640000000000000000000000000000600082015250565b60006111b1601283610cd7565b91506111bc8261117b565b602082019050919050565b600060208201905081810360008301526111e0816111a4565b9050919050565b7f416c7265616479207369676e6564000000000000000000000000000000000000600082015250565b600061121d600e83610cd7565b9150611228826111e7565b602082019050919050565b6000602082019050818103600083015261124c81611210565b9050919050565b61125c81610b37565b82525050565b60006040820190506112776000830185611253565b81810360208301526112898184610ce8565b9050939250505056fea2646970667358221220a1f355a9766a868ec2134712ccde9465a8136493b5ad0b43a4d51531715f720864736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "registerDocument(string)": {
        "params": {
          "text": "Texto completo o resumen del documento"
        }
      },
      "signDocument(bytes32,string)": {
        "params": {
          "docHash": "Hash del documento (devuelto al registrarlo)",
          "geo": "Geolocalizacion proporcionada por el front (ej: \"lat,long\")"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getDocument(bytes32)": {
        "notice": "Obtener el texto y creador de un documento"
      },
      "getSignatures(bytes32)": {
        "notice": "Obtener todas las firmas de un documento"
      },
      "registerDocument(string)": {
        "notice": "Registrar un nuevo documento"
      },
      "signDocument(bytes32,string)": {
        "notice": "Firmar un documento ya registrado"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/SignatureRegistry.sol:SignatureRegistry",
        "label": "documents",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(Document)21_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Signature)8_storage)dyn_storage": {
        "base": "t_struct(Signature)8_storage",
        "encoding": "dynamic_array",
        "label": "struct SignatureRegistry.Signature[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(Document)21_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct SignatureRegistry.Document)",
        "numberOfBytes": "32",
        "value": "t_struct(Document)21_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Document)21_storage": {
        "encoding": "inplace",
        "label": "struct SignatureRegistry.Document",
        "members": [
          {
            "astId": 10,
            "contract": "contracts/SignatureRegistry.sol:SignatureRegistry",
            "label": "text",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 12,
            "contract": "contracts/SignatureRegistry.sol:SignatureRegistry",
            "label": "creator",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 16,
            "contract": "contracts/SignatureRegistry.sol:SignatureRegistry",
            "label": "signatures",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_struct(Signature)8_storage)dyn_storage"
          },
          {
            "astId": 20,
            "contract": "contracts/SignatureRegistry.sol:SignatureRegistry",
            "label": "signed",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Signature)8_storage": {
        "encoding": "inplace",
        "label": "struct SignatureRegistry.Signature",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/SignatureRegistry.sol:SignatureRegistry",
            "label": "signer",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 5,
            "contract": "contracts/SignatureRegistry.sol:SignatureRegistry",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7,
            "contract": "contracts/SignatureRegistry.sol:SignatureRegistry",
            "label": "geo",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}